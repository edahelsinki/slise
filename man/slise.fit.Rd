% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{slise.fit}
\alias{slise.fit}
\title{SLISE Regression
Use SLISE for robust regression.}
\usage{
slise.fit(X, Y, epsilon = 0.1, lambda = 0, ..., scale = FALSE,
  logit = FALSE, intercept = TRUE, scale_y = TRUE)
}
\arguments{
\item{X}{matrix of independent variables}

\item{Y}{vector of the response variable}

\item{epsilon}{error tolerance (will be scaled to represent a percentage, e.g. 0.1 == 10\%)}

\item{lambda}{sparsity reguraliser}

\item{...}{other parameters to the optimiser}

\item{scale}{Scale X by mean and standard deviation (FALSE)}

\item{logit}{Should Y be logit-transformed (recommended for probabilities) (FALSE)}

\item{intercept}{Should an intercept be added (TRUE)}

\item{scale_y}{Scales Y to roughly be in [-0.5, 0.5] (based on 95th and 5th quantile if not in [0, 1]) (TRUE)}

\item{max_approx}{Target approximation ratio for selecting graduated optimisation step size (1.2)}

\item{beta_max}{Stopping sigmoid steepness (25)}

\item{beta_start_max}{Maximum beta-step during the initialisation (1.0)}

\item{max_iterations}{Maximum number of OWL-QN steps per graduated optimisation step (250)}
}
\value{
slise object (coefficients, subset, value, X, Y, lambda, epsilon, scaled, alpha)
}
\description{
SLISE Regression
Use SLISE for robust regression.
}
\examples{
X <- matrix(rnorm(200), 100, 2)
Y <- rnorm(100)
model <- slise.fit(X, Y)
prediction <- predict(model, X)
}
